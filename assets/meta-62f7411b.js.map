{"version":3,"file":"meta-62f7411b.js","sources":["../../components/DocLink.vue","../../components/DiscardableAction.vue","../../src/common/code_sandbox.js","../../pages/docs/[doc]/meta.vue"],"sourcesContent":["<template>\n  <router-link :to=\"{ path: `/docs/${doc.id}` }\" class=\"flex items-center\">\n    <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n    </svg>\n    <span class=\"flex-grow overflow-hidden truncate ml-3\">{{ title }}</span>\n  </router-link>\n</template>\n\n<script lang=\"ts\" setup>\nconst { doc } = defineProps<{ doc: { id: string, headers: string[] } }>()\nconst title = doc.headers[0]\n</script>\n","<template>\n  <button class=\"flex items-center cursor-pointer\" @click.stop=\"toggle\">\n    <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n    </svg>\n    <div class=\"ml-6 md:ml-3 text-left flex-grow\">{{ actionText }}</div>\n  </button>\n</template>\n\n<script>\nexport default {\n  props: {\n    discardedAt: Date,\n    onDiscard: Function,\n    onRestore: Function,\n  },\n  computed: {\n    actionText() {\n      return this.discardedAt ? 'Restore' : 'Discard';\n    },\n  },\n  methods: {\n    toggle() {\n      this.discardedAt ? this.onRestore() : this.onDiscard();\n    },\n  },\n};\n</script>\n","export const create = (files) => {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ files }),\n  };\n\n  return fetch('https://codesandbox.io/api/v1/sandboxes/define?json=1', options)\n    .then(res => res.json())\n    .then(data => data.sandbox_id)\n};\n\nexport const open = (sandbox_id) => {\n  if (sandbox_id) {\n    window.open(`https://codesandbox.io/s/${sandbox_id}`, '_blank');\n  }\n};\n\nexport default {\n  create,\n  open,\n};\n","<template>\n  <CoreScrollable class=\"meta p-4 md:p-2\">\n    <div class=\"flex flex-col flex-grow\">\n      <div v-if=\"doc\" class=\"flex flex-col flex-grow\">\n        <div>\n          <button @click.stop=\"duplicateDocument\" class=\"sidebar-link w-full\">\n            <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n            </svg>\n            <span class=\"ml-6 md:ml-3 flex-grow text-left\">Duplicate</span>\n          </button>\n          <DiscardableAction v-if=\"doc.id\" :discardedAt=\"doc.discardedAt\" :onDiscard=\"discardDocument\" :onRestore=\"restoreDocument\" class=\"sidebar-link w-full\"></DiscardableAction>\n          <button v-if=\"hasCodeblocks\" @click=\"openSandbox\" class=\"sidebar-link w-full\">\n            <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n            </svg>\n            <span class=\"ml-6 md:ml-3 flex-grow text-left\">Create Sandbox</span>\n          </button>\n          <div>\n            <div v-if=\"doc.public\">\n              <button @click=\"restrictDocument\" class=\"sidebar-link w-full\">\n                <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <span class=\"ml-6 md:ml-3 flex-grow text-left\">Make Private</span>\n              </button>\n              <button @click=\"copyPublicUrl\" class=\"sidebar-link w-full\">\n                <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n                </svg>\n                <span class=\"ml-6 md:ml-3 flex-grow text-left\">Copy Link</span>\n              </button>\n              <input ref=\"link\" :value=\"publicUrl\" type=\"text\" class=\"form-text w-full mb-2\" readonly>\n            </div>\n            <div v-else class=\"mb-2\">\n              <button @click=\"shareDocument\" class=\"sidebar-link w-full\">\n                <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 11V7a4 4 0 118 0m-4 8v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2z\" />\n                </svg>\n                <span class=\"ml-6 md:ml-3 flex-grow text-left\">Make Public</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"mt-4\">\n          <TagLink v-for=\"tag in doc.tags\" :key=\"tag\" :tag=\"tag\" class=\"sidebar-link\" />\n        </div>\n        <div class=\"mt-4\">\n          <DocLink v-for=\"reference in references\" :key=\"reference.id\" :doc=\"reference\" class=\"sidebar-link\" />\n        </div>\n        <div class=\"mt-4\">\n          <div v-for=\"task in doc.tasks\" class=\"flex items-center px-3 py-2 my-1 md:px-2 md:py-1\">\n            <svg height=\"1.25em\" width=\"1.25em\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <span class=\"flex-grow overflow-hidden truncate ml-3\">{{ task }}</span>\n          </div>\n        </div>\n        <div class=\"flex flex-col justify-end flex-grow px-3 md:p-2 mt-4 mb-3 md:mb-1\">\n          <div v-if=\"doc.updatedAt\">\n            <small class=\"text-gray-700\">Last Saved</small>\n            <div class=\"capitalize pt-2 md:pt-1\">{{ savedAt }}</div>\n          </div>\n          <div v-if=\"doc.createdAt\" class=\"mt-3 md:mt-2\">\n            <small class=\"text-gray-700\">Created</small>\n            <div class=\"pt-2 md:pt-1\">{{ createdAt }}</div>\n          </div>\n          <div v-if=\"doc.updatedAt\" class=\"mt-3 md:mt-2\">\n            <small class=\"text-gray-700\">Updated</small>\n            <div class=\"pt-2 md:pt-1\">{{ updatedAt }}</div>\n          </div>\n          <div v-if=\"doc.discardedAt\" class=\"mt-3 md:mt-2\">\n            <small class=\"text-gray-700\">Discarded</small>\n            <div class=\"pt-2 md:pt-1\">{{ discardedAt }}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </CoreScrollable>\n</template>\n\n<script>\nimport moment from 'moment'\n\nimport DiscardableAction from '/components/DiscardableAction.vue'\nimport DocLink from '/components/DocLink.vue'\nimport TagLink from '/components/TagLink.vue'\n\nimport CodeSandbox from '/src/common/code_sandbox.js'\nimport { parseCodeblocks, parseReferences } from '/src/common/parsers'\nimport { open } from '/src/router.js'\n\nimport {\n  DISCARD_DOCUMENT,\n  DUPLICATE_DOCUMENT,\n  RESTORE_DOCUMENT,\n  RESTRICT_DOCUMENT,\n  SHARE_DOCUMENT,\n  SET_RIGHT_SIDEBAR_VISIBILITY,\n} from '/src/store/actions.js'\n\nexport default {\n  components: {\n    DiscardableAction,\n    DocLink,\n    TagLink,\n  },\n  data() {\n    return {\n      now: moment(),\n      ticker: null,\n    }\n  },\n  computed: {\n    codeblocks() {\n      return parseCodeblocks(this.doc.text)\n    },\n    createdAt() {\n      if (this.$route.params.docId) {\n        return moment(this.doc.createdAt).format('ddd, MMM Do, YYYY [at] h:mm A')\n      }\n\n      return 'Not yet created'\n    },\n    discardedAt() {\n      return moment(this.doc.discardedAt).format('ddd, MMM Do, YYYY [at] h:mm A')\n    },\n    doc() {\n      return this.$store.getters.currentDoc\n    },\n    hasCodeblocks() {\n      return this.codeblocks.length > 0\n    },\n    publicUrl() {\n      const path = this.$router.resolve({ path: `/public/${this.doc.id}` }).href\n\n      return `${location.protocol}//${location.host}${path}`\n    },\n    references() {\n      const references = parseReferences(this.doc.text)\n\n      return this.$store.getters.kept.filter((doc) => {\n        return references.includes(doc.id)\n      })\n    },\n    savedAt() {\n      if (this.$route.params.docId) {\n        if (this.now.diff(this.doc.updatedAt, 'seconds') < 5) {\n          return 'just now'\n        }\n        else {\n          return `${moment(this.doc.updatedAt).from(this.now, true)} ago`\n        }\n      }\n\n      return 'Not yet saved'\n    },\n    updatedAt() {\n      if (this.$route.params.docId) {\n        return moment(this.doc.updatedAt).format('ddd, MMM Do, YYYY [at] h:mm A')\n      }\n\n      return 'Not yet updated'\n    },\n  },\n  methods: {\n    async copyPublicUrl() {\n      // copy link to clipboard\n      this.$refs.link.select()\n      document.execCommand('copy')\n    },\n    async discardDocument() {\n      this.$store.dispatch(DISCARD_DOCUMENT, { id: this.doc.id })\n\n      open({ path: '/docs/new' })\n    },\n    async duplicateDocument() {\n      const newDocId = await this.$store.dispatch(DUPLICATE_DOCUMENT, { id: this.doc.id })\n\n      open({ path: `/docs/${newDocId}` })\n    },\n    async openSandbox() {\n      const files = this.codeblocks.reduce((agg, codeblock, index) => {\n        const filename = codeblock.filename || [index, (codeblock.language || 'txt')].join('.')\n\n        return {\n          ...agg,\n          [filename]: {\n            content: codeblock.code,\n          },\n        }\n      }, {})\n\n      CodeSandbox.create(files).then(sandbox_id => CodeSandbox.open(sandbox_id))\n    },\n    async restoreDocument() {\n      this.$store.dispatch(RESTORE_DOCUMENT, { id: this.doc.id })\n    },\n    async restrictDocument() {\n      this.$store.dispatch(RESTRICT_DOCUMENT, { id: this.doc.id })\n    },\n    async shareDocument() {\n      this.$store.dispatch(SHARE_DOCUMENT, { id: this.doc.id })\n    },\n    async toggleMeta() {\n      this.$store.dispatch(SET_RIGHT_SIDEBAR_VISIBILITY, !this.$store.state.showRightSidebar)\n    },\n  },\n  async beforeUnmount() {\n    clearInterval(this.ticker)\n  },\n  async mounted() {\n    this.mounted = true\n\n    this.ticker = setInterval(() => {\n      this.now = moment()\n    }, 5000)\n  },\n}\n</script>\n"],"names":["_sfc_main","_hoisted_2","_withModifiers","DiscardableAction","DocLink","TagLink","moment","open","_createElementVNode","_openBlock","_createElementBlock","_Fragment","_renderList"],"mappings":"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"}