{"version":3,"file":"import-9423ac00.js","sources":["../../node_modules/remarkable/dist/esm/index.browser.js","../../node_modules/js-yaml/lib/js-yaml/common.js","../../node_modules/js-yaml/lib/js-yaml/exception.js","../../node_modules/js-yaml/lib/js-yaml/mark.js","../../node_modules/js-yaml/lib/js-yaml/type.js","../../node_modules/js-yaml/lib/js-yaml/schema.js","../../node_modules/js-yaml/lib/js-yaml/type/str.js","../../node_modules/js-yaml/lib/js-yaml/type/seq.js","../../node_modules/js-yaml/lib/js-yaml/type/map.js","../../node_modules/js-yaml/lib/js-yaml/schema/failsafe.js","../../node_modules/js-yaml/lib/js-yaml/type/null.js","../../node_modules/js-yaml/lib/js-yaml/type/bool.js","../../node_modules/js-yaml/lib/js-yaml/type/int.js","../../node_modules/js-yaml/lib/js-yaml/type/float.js","../../node_modules/js-yaml/lib/js-yaml/schema/json.js","../../node_modules/js-yaml/lib/js-yaml/schema/core.js","../../node_modules/js-yaml/lib/js-yaml/type/timestamp.js","../../node_modules/js-yaml/lib/js-yaml/type/merge.js","../../node_modules/js-yaml/lib/js-yaml/type/binary.js","../../node_modules/js-yaml/lib/js-yaml/type/omap.js","../../node_modules/js-yaml/lib/js-yaml/type/pairs.js","../../node_modules/js-yaml/lib/js-yaml/type/set.js","../../node_modules/js-yaml/lib/js-yaml/schema/default_safe.js","../../node_modules/js-yaml/lib/js-yaml/type/js/undefined.js","../../node_modules/js-yaml/lib/js-yaml/type/js/regexp.js","../../node_modules/js-yaml/lib/js-yaml/type/js/function.js","../../node_modules/js-yaml/lib/js-yaml/schema/default_full.js","../../node_modules/js-yaml/lib/js-yaml/loader.js","../../node_modules/js-yaml/lib/js-yaml/dumper.js","../../node_modules/js-yaml/lib/js-yaml.js","../../node_modules/js-yaml/index.js","../../node_modules/remarkable-front-matter/_esm5.index.js","../../pages/docs/import.vue"],"sourcesContent":["var textarea;\n\nfunction decodeEntity(name) {\n  textarea = textarea || document.createElement('textarea');\n  textarea.innerHTML = '&' + name + ';';\n  return textarea.value;\n}\n\n/**\n * Utility functions\n */\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object\n    ? hasOwn.call(object, key)\n    : false;\n}\n\n// Extend objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = [].slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n  var decoded = decodeEntity(name);\n\n  if (name !== decoded) {\n    return decoded;\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  isString: isString,\n  has: has,\n  assign: assign,\n  unescapeMd: unescapeMd,\n  isValidEntityCode: isValidEntityCode,\n  fromCodePoint: fromCodePoint,\n  replaceEntities: replaceEntities,\n  escapeHtml: escapeHtml\n});\n\n/**\n * Renderer rules cache\n */\n\nvar rules = {};\n\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n\n/**\n * Code\n */\n\nrules.code = function(tokens, idx /*, options, env */) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\n/**\n * Fenced code blocks\n */\n\nrules.fence = function(tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '', fences, fenceName;\n  var highlighted;\n\n  if (token.params) {\n\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\n      || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>'\n        + highlighted\n        + '</code></pre>'\n        + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n\n/**\n * Headings\n */\n\nrules.heading_open = function(tokens, idx /*, options, env */) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\nrules.heading_close = function(tokens, idx /*, options, env */) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n\n/**\n * Horizontal rules\n */\n\nrules.hr = function(tokens, idx, options /*, env */) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n\n/**\n * Bullets\n */\n\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\n  return '<ul>\\n';\n};\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n\n/**\n * List items\n */\n\nrules.list_item_open = function(/* tokens, idx, options, env */) {\n  return '<li>';\n};\nrules.list_item_close = function(/* tokens, idx, options, env */) {\n  return '</li>\\n';\n};\n\n/**\n * Ordered list items\n */\n\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n\n/**\n * Paragraphs\n */\n\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\n  return tokens[idx].tight ? '' : '<p>';\n};\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n\n/**\n * Links\n */\n\nrules.link_open = function(tokens, idx, options /* env */) {\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\nrules.link_close = function(/* tokens, idx, options, env */) {\n  return '</a>';\n};\n\n/**\n * Images\n */\n\nrules.image = function(tokens, idx, options /*, env */) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n\n/**\n * Tables\n */\n\nrules.table_open = function(/* tokens, idx, options, env */) {\n  return '<table>\\n';\n};\nrules.table_close = function(/* tokens, idx, options, env */) {\n  return '</table>\\n';\n};\nrules.thead_open = function(/* tokens, idx, options, env */) {\n  return '<thead>\\n';\n};\nrules.thead_close = function(/* tokens, idx, options, env */) {\n  return '</thead>\\n';\n};\nrules.tbody_open = function(/* tokens, idx, options, env */) {\n  return '<tbody>\\n';\n};\nrules.tbody_close = function(/* tokens, idx, options, env */) {\n  return '</tbody>\\n';\n};\nrules.tr_open = function(/* tokens, idx, options, env */) {\n  return '<tr>';\n};\nrules.tr_close = function(/* tokens, idx, options, env */) {\n  return '</tr>\\n';\n};\nrules.th_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<th'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.th_close = function(/* tokens, idx, options, env */) {\n  return '</th>';\n};\nrules.td_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<td'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.td_close = function(/* tokens, idx, options, env */) {\n  return '</td>';\n};\n\n/**\n * Bold\n */\n\nrules.strong_open = function(/* tokens, idx, options, env */) {\n  return '<strong>';\n};\nrules.strong_close = function(/* tokens, idx, options, env */) {\n  return '</strong>';\n};\n\n/**\n * Italicize\n */\n\nrules.em_open = function(/* tokens, idx, options, env */) {\n  return '<em>';\n};\nrules.em_close = function(/* tokens, idx, options, env */) {\n  return '</em>';\n};\n\n/**\n * Strikethrough\n */\n\nrules.del_open = function(/* tokens, idx, options, env */) {\n  return '<del>';\n};\nrules.del_close = function(/* tokens, idx, options, env */) {\n  return '</del>';\n};\n\n/**\n * Insert\n */\n\nrules.ins_open = function(/* tokens, idx, options, env */) {\n  return '<ins>';\n};\nrules.ins_close = function(/* tokens, idx, options, env */) {\n  return '</ins>';\n};\n\n/**\n * Highlight\n */\n\nrules.mark_open = function(/* tokens, idx, options, env */) {\n  return '<mark>';\n};\nrules.mark_close = function(/* tokens, idx, options, env */) {\n  return '</mark>';\n};\n\n/**\n * Super- and sub-script\n */\n\nrules.sub = function(tokens, idx /*, options, env */) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\nrules.sup = function(tokens, idx /*, options, env */) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n\n/**\n * Breaks\n */\n\nrules.hardbreak = function(tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\nrules.softbreak = function(tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n/**\n * Text\n */\n\nrules.text = function(tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n/**\n * Content\n */\n\nrules.htmlblock = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\nrules.htmltag = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * Abbreviations, initialism\n */\n\nrules.abbr_open = function(tokens, idx /*, options, env */) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\nrules.abbr_close = function(/* tokens, idx, options, env */) {\n  return '</abbr>';\n};\n\n/**\n * Footnotes\n */\n\nrules.footnote_ref = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\nrules.footnote_block_open = function(tokens, idx, options) {\n  var hr = options.xhtmlOut\n    ? '<hr class=\"footnotes-sep\" />\\n'\n    : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\nrules.footnote_block_close = function() {\n  return '</ol>\\n</section>\\n';\n};\nrules.footnote_open = function(tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\nrules.footnote_close = function() {\n  return '</li>\\n';\n};\nrules.footnote_anchor = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n};\n\n/**\n * Definition lists\n */\n\nrules.dl_open = function() {\n  return '<dl>\\n';\n};\nrules.dt_open = function() {\n  return '<dt>';\n};\nrules.dd_open = function() {\n  return '<dd>';\n};\nrules.dl_close = function() {\n  return '</dl>\\n';\n};\nrules.dt_close = function() {\n  return '</dt>\\n';\n};\nrules.dd_close = function() {\n  return '</dd>\\n';\n};\n\n/**\n * Helper functions\n */\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\n    return nextToken(tokens, idx + 2);\n  }\n  return idx;\n}\n\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n  return '\\n';\n};\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // In strict mode disable all existing rules first\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  }\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n  return this.__cache__[chainName] || [];\n};\n\nfunction block(state) {\n\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [ 0, 1 ],\n      children: []\n    });\n\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n}\n\n// Inline parser state\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n                          // \"paired\" rules (emphasis, strikes) to not skip\n                          // tailing `]`\n\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\n                          // nesting in definitions\n\n  this.linkContent = '';  // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n                                 // (backtrack optimization)\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n};\n\n// Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n};\n\n// Get cache value\n//\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nfunction parseLinkLabel(state, start) {\n  var level, found, marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) { return -1; }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5B /* [ */) {\n      level++;\n    } else if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n\n  return labelEnd;\n}\n\n// Parse abbreviation definitions, i.e. `*[abbr]: description`\n\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // abbr title is always one line, so looking for ending \"\\n\" here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n  if (title.length === 0) { return -1; }\n  if (!env.abbreviations) { env.abbreviations = {}; }\n  // prepend ':' to avoid conflict with Object.prototype members\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nfunction abbr(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Parse inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i].type === 'inline' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction normalizeLink(url) {\n  var normalized = replaceEntities(url);\n  // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n  return encodeURI(normalized);\n}\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n}\n\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n}\n\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  if (!parseLinkDestination(state, pos)) { return -1; }\n  href = state.linkContent;\n  pos = state.pos;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  }\n\n  // ensure that the end of the line is empty\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = { title: title, href: href };\n  }\n\n  return pos;\n}\n\n\nfunction references(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Scan definitions in paragraph inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' &&\n        tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n}\n\nfunction footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n}\n\n// Enclose abbreviations in <abbr> tags\n//\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nfunction abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n}\n\n// Simple typographical replacements\n//\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nfunction replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '±')\n            // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n}\n\n// Convert straight quotation marks to typographic ones\n//\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '’';\n\n// This function returns true if the character at `pos`\n// could be inside a word.\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) { return false; }\n  return !PUNCT_RE.test(str[pos]);\n}\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\n\nfunction smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\n      stack;\n\n  if (!state.options.typographer) { return; }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) { break; }\n      }\n      stack.length = j + 1;\n\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER:\n      while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) { break; }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = (t[0] === \"'\");\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) { break; }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          block          ],\n  [ 'abbr',           abbr           ],\n  [ 'references',     references     ],\n  [ 'inline',         inline         ],\n  [ 'footnote_tail',  footnote_block  ],\n  [ 'abbr2',          abbr2          ],\n  [ 'replacements',   replace   ],\n  [ 'smartquotes',    smartquotes    ],\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n// Parser state class\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n\n  this.src = src;\n\n  // Shortcuts to simplify nested calls\n  this.parser = parser;\n\n  this.options = options;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // indent for each line\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20/* space */) {\n        indent++;\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, first, last, queue, shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  // Opt: don't use push queue for single line;\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n    if (shift > indent) { shift = indent; }\n    if (shift < 0) { shift = 0; }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// Code block (4 spaces padded)\n\nfunction code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// fences (``` lang, ~~~ lang)\n\nfunction fences(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.tShift[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Block quotes\n\nfunction blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\n      terminatorRules,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  // check if we have an empty blockquote\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.parser.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n\n    // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n}\n\n// Horizontal rule\n\nfunction hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Lists\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nfunction list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Process footnote reference list\n\nfunction footnote(state, startLine, endLine, silent) {\n  var oldBMark, oldTShift, oldParentType, pos, label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // line should be at least 5 chars - \"[^x]:\"\n  if (start + 4 > max) { return false; }\n\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n  if (silent) { return true; }\n  pos++;\n\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n\n  return true;\n}\n\n// heading (#, ##, ...)\n\nfunction heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n}\n\n// lheading (---, ===)\n\nfunction lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n}\n\n// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\nvar html_blocks = {};\n\n[\n  'article',\n  'aside',\n  'button',\n  'blockquote',\n  'body',\n  'canvas',\n  'caption',\n  'col',\n  'colgroup',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'iframe',\n  'li',\n  'map',\n  'object',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'progress',\n  'script',\n  'section',\n  'style',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'tr',\n  'thead',\n  'ul',\n  'video'\n].forEach(function (name) { html_blocks[name] = true; });\n\n// HTML block\n\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter$1(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\nfunction htmlblock(state, startLine, endLine, silent) {\n  var ch, match, nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n\n  pos += shift;\n\n  if (!state.options.html) { return false; }\n\n  if (shift > 3 || pos + 2 >= max) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\n    // Directive start / comment start / processing instruction start\n    if (silent) { return true; }\n\n  } else if (ch === 0x2F/* / */ || isLetter$1(ch)) {\n\n    // Probably start or end of tag\n    if (ch === 0x2F/* \\ */) {\n      // closing tag\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n      if (!match) { return false; }\n    } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n      if (!match) { return false; }\n    }\n    // Make sure tag name is valid\n    if (html_blocks[match[1].toLowerCase()] !== true) { return false; }\n    if (silent) { return true; }\n\n  } else {\n    return false;\n  }\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n  nextLine = startLine + 1;\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [ startLine, state.line ],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n\n  return true;\n}\n\n// GFM table, non-standard\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  rows = lineText.split('|');\n  if (rows <= 2) { return false; }\n  aligns = [];\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n  if (aligns.length !== rows.length) { return false; }\n  if (silent) { return true; }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [ startLine, startLine + 1 ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [ startLine, startLine + 1 ],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({ type: 'th_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tr_close', level: --state.level });\n  state.tokens.push({ type: 'thead_close', level: --state.level });\n\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [ startLine + 2, 0 ],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n      // 0x7c === '|'\n      cell = rows[i].substring(\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\n      ).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({ type: 'td_close', level: --state.level });\n    }\n    state.tokens.push({ type: 'tr_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\n  state.tokens.push({ type: 'table_close', level: --state.level });\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n}\n\n// Definition lists\n\n// Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipMarker(state, line) {\n  var pos, marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) { return -1; }\n\n  // Check bullet\n  marker = state.src.charCodeAt(start++);\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n  pos = state.skipSpaces(start);\n\n  // require space after \":\"\n  if (start === pos) { return -1; }\n\n  // no empty definitions, e.g. \"  : \"\n  if (pos >= max) { return -1; }\n\n  return pos;\n}\n\nfunction markTightParagraphs$1(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nfunction deflist(state, startLine, endLine, silent) {\n  var contentStart,\n      ddLine,\n      dtLine,\n      itemLines,\n      listLines,\n      listTokIdx,\n      nextLine,\n      oldIndent,\n      oldDDIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      prevEmptyEnd,\n      tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) { return false; }\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) { return false; }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n  contentStart = skipMarker(state, nextLine);\n  if (contentStart < 0) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [ startLine, 0 ],\n    level: state.level++\n  });\n\n  //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine;\n\n  // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n  /*eslint no-labels:0,block-scoped-var:0*/\n  OUTER:\n  for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [ dtLine, dtLine ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [ dtLine, dtLine ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [ nextLine, 0 ],\n        level: state.level++\n      });\n\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n\n      state.parser.tokenize(state, ddLine, endLine, true);\n\n      // If any of list item is tight, mark list as tight\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      }\n      // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) { break OUTER; }\n\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) { break; }\n\n      ddLine = nextLine;\n\n      // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) { break; }\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) { break; }\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\n\n    ddLine = dtLine + 1;\n    if (ddLine >= endLine) { break; }\n    if (state.isEmpty(ddLine)) { ddLine++; }\n    if (ddLine >= endLine) { break; }\n\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\n    contentStart = skipMarker(state, ddLine);\n    if (contentStart < 0) { break; }\n\n    // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs$1(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Paragraph\n\nfunction paragraph(state, startLine/*, endLine*/) {\n  var endLine, content, terminate, i, l,\n      nextLine = startLine + 1,\n      terminatorRules;\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) { break; }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [ startLine, state.line ],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n}\n\n/**\n * Parser rules\n */\n\nvar _rules$1 = [\n  [ 'code',       code ],\n  [ 'fences',     fences,     [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'blockquote', blockquote, [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'hr',         hr,         [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'list',       list,       [ 'paragraph', 'blockquote' ] ],\n  [ 'footnote',   footnote,   [ 'paragraph' ] ],\n  [ 'heading',    heading,    [ 'paragraph', 'blockquote' ] ],\n  [ 'lheading',   lheading ],\n  [ 'htmlblock',  htmlblock,  [ 'paragraph', 'blockquote' ] ],\n  [ 'table',      table,      [ 'paragraph' ] ],\n  [ 'deflist',    deflist,    [ 'paragraph' ] ],\n  [ 'paragraph',  paragraph ]\n];\n\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$1.length; i++) {\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n      alt: (_rules$1[i][2] || []).slice()\n    });\n  }\n}\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        break;\n      }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE    = /\\u00a0/g;\n\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state, lineStart = 0, lastTabPos = 0;\n  if (!str) { return []; }\n\n  // Normalize spaces\n  str = str.replace(SPACES_RE, ' ');\n\n  // Normalize newlines\n  str = str.replace(NEWLINES_RE, '\\n');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n}\n\n// Proceess '\\n'\n\nfunction newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n}\n\n// Proceess escaped chars and hardbreaks\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nfunction escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n}\n\n// Parse backticks\n\nfunction backticks(state, silent) {\n  var start, max, marker, matchStart, matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart)\n                              .replace(/[ \\n]+/g, ' ')\n                              .trim(),\n          block: false,\n          level: state.level\n        });\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n}\n\n// Process ~~deleted text~~\n\nfunction del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '~~'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '~~'\n            stack++;\n          } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'del_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'del_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ++inserted text++\n\nfunction ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ==highlighted text==\n\nfunction mark(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '=='\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '=='\n            stack++;\n          } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'mark_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'mark_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process *this* and _that_\n\nfunction isAlphaNum(code) {\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\n}\n\n// parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\nfunction scanDelims(state, start) {\n  var pos = start, lastChar, nextChar, count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\n  if (pos >= max) { can_open = false; }\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n    // check whitespace conditions\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\n\n    if (marker === 0x5F /* _ */) {\n      // check if we aren't inside the word\n      if (isAlphaNum(lastChar)) { can_open = false; }\n      if (isAlphaNum(nextChar)) { can_close = false; }\n    }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nfunction emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n  if (!res.can_open) {\n    state.pos += startCount;\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + startCount;\n  stack = [ startCount ];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          }\n\n          // assert(newCount > oldCount)\n          newCount -= oldCount;\n\n          if (stack.length === 0) { break; }\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) { stack.push(count); }\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_open', level: state.level++ });\n    }\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_open', level: state.level++ });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_close', level: --state.level });\n    }\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_close', level: --state.level });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n}\n\n// Process ~subscript~\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process ^superscript^\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE$1, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process [links](<to> \"stuff\")\n\n\nfunction links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21/* ! */) {\n    isImage = true;\n    marker = state.src.charCodeAt(++start);\n  }\n\n  if (marker !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    if (parseLinkDestination(state, pos)) {\n      href = state.linkContent;\n      pos = state.pos;\n    } else {\n      href = '';\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n\n    // do not allow nested reference links\n    if (state.linkLevel > 0) { return false; }\n\n    // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = start - 1;\n      }\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({ type: 'link_close', level: --state.level });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process inline footnotes (^[...])\n\n\nfunction footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1);\n\n  // parser failed to find ']', so it's not a valid note\n  if (labelEnd < 0) { return false; }\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n    footnoteId = state.env.footnotes.list.length;\n\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process footnote references ([^...])\n\nfunction footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n\nvar url_schemas = [\n  'coap',\n  'doi',\n  'javascript',\n  'aaa',\n  'aaas',\n  'about',\n  'acap',\n  'cap',\n  'cid',\n  'crid',\n  'data',\n  'dav',\n  'dict',\n  'dns',\n  'file',\n  'ftp',\n  'geo',\n  'go',\n  'gopher',\n  'h323',\n  'http',\n  'https',\n  'iax',\n  'icap',\n  'im',\n  'imap',\n  'info',\n  'ipp',\n  'iris',\n  'iris.beep',\n  'iris.xpc',\n  'iris.xpcs',\n  'iris.lwz',\n  'ldap',\n  'mailto',\n  'mid',\n  'msrp',\n  'msrps',\n  'mtqp',\n  'mupdate',\n  'news',\n  'nfs',\n  'ni',\n  'nih',\n  'nntp',\n  'opaquelocktoken',\n  'pop',\n  'pres',\n  'rtsp',\n  'service',\n  'session',\n  'shttp',\n  'sieve',\n  'sip',\n  'sips',\n  'sms',\n  'snmp',\n  'soap.beep',\n  'soap.beeps',\n  'tag',\n  'tel',\n  'telnet',\n  'tftp',\n  'thismessage',\n  'tn3270',\n  'tip',\n  'tv',\n  'urn',\n  'vemmi',\n  'ws',\n  'wss',\n  'xcon',\n  'xcon-userid',\n  'xmlrpc.beep',\n  'xmlrpc.beeps',\n  'xmpp',\n  'z39.50r',\n  'z39.50s',\n  'adiumxtra',\n  'afp',\n  'afs',\n  'aim',\n  'apt',\n  'attachment',\n  'aw',\n  'beshare',\n  'bitcoin',\n  'bolo',\n  'callto',\n  'chrome',\n  'chrome-extension',\n  'com-eventbrite-attendee',\n  'content',\n  'cvs',\n  'dlna-playsingle',\n  'dlna-playcontainer',\n  'dtn',\n  'dvb',\n  'ed2k',\n  'facetime',\n  'feed',\n  'finger',\n  'fish',\n  'gg',\n  'git',\n  'gizmoproject',\n  'gtalk',\n  'hcp',\n  'icon',\n  'ipn',\n  'irc',\n  'irc6',\n  'ircs',\n  'itms',\n  'jar',\n  'jms',\n  'keyparc',\n  'lastfm',\n  'ldaps',\n  'magnet',\n  'maps',\n  'market',\n  'message',\n  'mms',\n  'ms-help',\n  'msnim',\n  'mumble',\n  'mvn',\n  'notes',\n  'oid',\n  'palm',\n  'paparazzi',\n  'platform',\n  'proxy',\n  'psyc',\n  'query',\n  'res',\n  'resource',\n  'rmi',\n  'rsync',\n  'rtmp',\n  'secondlife',\n  'sftp',\n  'sgn',\n  'skype',\n  'smb',\n  'soldat',\n  'spotify',\n  'ssh',\n  'steam',\n  'svn',\n  'teamspeak',\n  'things',\n  'udp',\n  'unreal',\n  'ut2004',\n  'ventrilo',\n  'view-source',\n  'webcal',\n  'wtai',\n  'wyciwyg',\n  'xfire',\n  'xri',\n  'ymsgr'\n];\n\n// Process autolinks '<protocol:...>'\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nfunction autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n}\n\n// Regexps to match html elements\n\nfunction replace$1(regex, options) {\n  regex = regex.source;\n  options = options || '';\n\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\n\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n\n/*eslint no-spaced-func:0*/\nvar attr_value  = replace$1(/(?:unquoted|single_quoted|double_quoted)/)\n                    ('unquoted', unquoted)\n                    ('single_quoted', single_quoted)\n                    ('double_quoted', double_quoted)\n                    ();\n\nvar attribute   = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\n                    ('attr_name', attr_name)\n                    ('attr_value', attr_value)\n                    ();\n\nvar open_tag    = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\n                    ('attribute', attribute)\n                    ();\n\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing  = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n\nvar HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\n  ('open_tag', open_tag)\n  ('close_tag', close_tag)\n  ('comment', comment)\n  ('processing', processing)\n  ('declaration', declaration)\n  ('cdata', cdata)\n  ();\n\n// Process html tags\n\n\nfunction isLetter$2(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nfunction htmltag(state, silent) {\n  var ch, match, max, pos = state.pos;\n\n  if (!state.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter$2(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n  state.pos += match[0].length;\n  return true;\n}\n\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nfunction entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        var decoded = decodeEntity(match[1]);\n        if (match[1] !== decoded) {\n          if (!silent) { state.pending += decoded; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n}\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules$2 = [\n  [ 'text',            text ],\n  [ 'newline',         newline ],\n  [ 'escape',          escape ],\n  [ 'backticks',       backticks ],\n  [ 'del',             del ],\n  [ 'ins',             ins ],\n  [ 'mark',            mark ],\n  [ 'emphasis',        emphasis ],\n  [ 'sub',             sub ],\n  [ 'sup',             sup ],\n  [ 'links',           links ],\n  [ 'footnote_inline', footnote_inline ],\n  [ 'footnote_ref',    footnote_ref ],\n  [ 'autolink',        autolink ],\n  [ 'htmltag',         htmltag ],\n  [ 'entity',          entity ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$2.length; i++) {\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n// Remarkable default options\n\nvar defaultConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'replacements',\n        'smartquotes',\n        'references',\n        'abbr2',\n        'footnote_tail'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'footnote',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph',\n        'table'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'del',\n        'emphasis',\n        'entity',\n        'escape',\n        'footnote_ref',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n// Remarkable default options\n\nvar fullConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes:       '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight:     null,\n\n    maxNesting:    20            // Internal protection, recursion limit\n  },\n\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n// Commonmark default options\n\nvar commonmarkConfig = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'abbr2'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default': defaultConfig,\n  'full': fullConfig,\n  'commonmark': commonmarkConfig\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  if (options && options.linkify != null) {\n    console.warn(\n      'linkify option is removed. Use linkify plugin instead:\\n\\n' +\n      'import Remarkable from \\'remarkable\\';\\n' +\n      'import linkify from \\'remarkable/linkify\\';\\n' +\n      'new Remarkable().use(linkify)\\n'\n    );\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new Core();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\nexport { Remarkable, utils };\n","'use strict';\n\n\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nmodule.exports.isNothing      = isNothing;\nmodule.exports.isObject       = isObject;\nmodule.exports.toArray        = toArray;\nmodule.exports.repeat         = repeat;\nmodule.exports.isNegativeZero = isNegativeZero;\nmodule.exports.extend         = extend;\n","// YAML error class. http://stackoverflow.com/questions/8458984\n//\n'use strict';\n\nfunction YAMLException(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException.prototype = Object.create(Error.prototype);\nYAMLException.prototype.constructor = YAMLException;\n\n\nYAMLException.prototype.toString = function toString(compact) {\n  var result = this.name + ': ';\n\n  result += this.reason || '(unknown reason)';\n\n  if (!compact && this.mark) {\n    result += ' ' + this.mark.toString();\n  }\n\n  return result;\n};\n\n\nmodule.exports = YAMLException;\n","'use strict';\n\n\nvar common = require('./common');\n\n\nfunction Mark(name, buffer, position, line, column) {\n  this.name     = name;\n  this.buffer   = buffer;\n  this.position = position;\n  this.line     = line;\n  this.column   = column;\n}\n\n\nMark.prototype.getSnippet = function getSnippet(indent, maxLength) {\n  var head, start, tail, end, snippet;\n\n  if (!this.buffer) return null;\n\n  indent = indent || 4;\n  maxLength = maxLength || 75;\n\n  head = '';\n  start = this.position;\n\n  while (start > 0 && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {\n    start -= 1;\n    if (this.position - start > (maxLength / 2 - 1)) {\n      head = ' ... ';\n      start += 5;\n      break;\n    }\n  }\n\n  tail = '';\n  end = this.position;\n\n  while (end < this.buffer.length && '\\x00\\r\\n\\x85\\u2028\\u2029'.indexOf(this.buffer.charAt(end)) === -1) {\n    end += 1;\n    if (end - this.position > (maxLength / 2 - 1)) {\n      tail = ' ... ';\n      end -= 5;\n      break;\n    }\n  }\n\n  snippet = this.buffer.slice(start, end);\n\n  return common.repeat(' ', indent) + head + snippet + tail + '\\n' +\n         common.repeat(' ', indent + this.position - start + head.length) + '^';\n};\n\n\nMark.prototype.toString = function toString(compact) {\n  var snippet, where = '';\n\n  if (this.name) {\n    where += 'in \"' + this.name + '\" ';\n  }\n\n  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);\n\n  if (!compact) {\n    snippet = this.getSnippet();\n\n    if (snippet) {\n      where += ':\\n' + snippet;\n    }\n  }\n\n  return where;\n};\n\n\nmodule.exports = Mark;\n","'use strict';\n\nvar YAMLException = require('./exception');\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new YAMLException('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.tag          = tag;\n  this.kind         = options['kind']         || null;\n  this.resolve      = options['resolve']      || function () { return true; };\n  this.construct    = options['construct']    || function (data) { return data; };\n  this.instanceOf   = options['instanceOf']   || null;\n  this.predicate    = options['predicate']    || null;\n  this.represent    = options['represent']    || null;\n  this.defaultStyle = options['defaultStyle'] || null;\n  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new YAMLException('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nmodule.exports = Type;\n","'use strict';\n\n/*eslint-disable max-len*/\n\nvar common        = require('./common');\nvar YAMLException = require('./exception');\nvar Type          = require('./type');\n\n\nfunction compileList(schema, name, result) {\n  var exclude = [];\n\n  schema.include.forEach(function (includedSchema) {\n    result = compileList(includedSchema, name, result);\n  });\n\n  schema[name].forEach(function (currentType) {\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {\n        exclude.push(previousIndex);\n      }\n    });\n\n    result.push(currentType);\n  });\n\n  return result.filter(function (type, index) {\n    return exclude.indexOf(index) === -1;\n  });\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {}\n      }, index, length;\n\n  function collectType(type) {\n    result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema(definition) {\n  this.include  = definition.include  || [];\n  this.implicit = definition.implicit || [];\n  this.explicit = definition.explicit || [];\n\n  this.implicit.forEach(function (type) {\n    if (type.loadKind && type.loadKind !== 'scalar') {\n      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n  });\n\n  this.compiledImplicit = compileList(this, 'implicit', []);\n  this.compiledExplicit = compileList(this, 'explicit', []);\n  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);\n}\n\n\nSchema.DEFAULT = null;\n\n\nSchema.create = function createSchema() {\n  var schemas, types;\n\n  switch (arguments.length) {\n    case 1:\n      schemas = Schema.DEFAULT;\n      types = arguments[0];\n      break;\n\n    case 2:\n      schemas = arguments[0];\n      types = arguments[1];\n      break;\n\n    default:\n      throw new YAMLException('Wrong number of arguments for Schema.create function');\n  }\n\n  schemas = common.toArray(schemas);\n  types = common.toArray(types);\n\n  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {\n    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');\n  }\n\n  if (!types.every(function (type) { return type instanceof Type; })) {\n    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n  }\n\n  return new Schema({\n    include: schemas,\n    explicit: types\n  });\n};\n\n\nmodule.exports = Schema;\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n","'use strict';\n\nvar Type = require('../type');\n\nmodule.exports = new Type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n","// Standard YAML's Failsafe schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2802346\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  explicit: [\n    require('../type/str'),\n    require('../type/seq'),\n    require('../type/map')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n    // base 8\n    for (; index < max; index++) {\n      ch = data[index];\n      if (ch === '_') continue;\n      if (!isOctCode(data.charCodeAt(index))) return false;\n      hasDigits = true;\n    }\n    return hasDigits && ch !== '_';\n  }\n\n  // base 10 (except 0) or base 60\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (ch === ':') break;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  // if !base60 - done;\n  if (ch !== ':') return true;\n\n  // base60 almost not used, no needs to optimize\n  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch, base, digits = [];\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value, 16);\n    return sign * parseInt(value, 8);\n  }\n\n  if (value.indexOf(':') !== -1) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseInt(v, 10));\n    });\n\n    value = 0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += (d * base);\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n","'use strict';\n\nvar common = require('../common');\nvar Type   = require('../type');\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // 20:59\n  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\\\.[0-9_]*' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign, base, digits;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n  digits = [];\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n\n  } else if (value.indexOf(':') >= 0) {\n    value.split(':').forEach(function (v) {\n      digits.unshift(parseFloat(v, 10));\n    });\n\n    value = 0.0;\n    base = 1;\n\n    digits.forEach(function (d) {\n      value += d * base;\n      base *= 60;\n    });\n\n    return sign * value;\n\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n","// Standard YAML's JSON schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2803231\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, this schema is not such strict as defined in the YAML specification.\n// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./failsafe')\n  ],\n  implicit: [\n    require('../type/null'),\n    require('../type/bool'),\n    require('../type/int'),\n    require('../type/float')\n  ]\n});\n","// Standard YAML's Core schema.\n// http://www.yaml.org/spec/1.2/spec.html#id2804923\n//\n// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.\n// So, Core schema has no distinctions from JSON schema is JS-YAML.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./json')\n  ]\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n","'use strict';\n\nvar Type = require('../type');\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n","'use strict';\n\n/*eslint-disable no-bitwise*/\n\nvar NodeBuffer;\n\ntry {\n  // A trick for browserified version, to not include `Buffer` shim\n  var _require = require;\n  NodeBuffer = _require('buffer').Buffer;\n} catch (__) {}\n\nvar Type       = require('../type');\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  // Wrap into Buffer for NodeJS and leave Array for browser\n  if (NodeBuffer) {\n    // Support node 6.+ Buffer API when available\n    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);\n  }\n\n  return result;\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(object) {\n  return NodeBuffer && NodeBuffer.isBuffer(object);\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _toString       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _toString = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n","'use strict';\n\nvar Type = require('../type');\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n","// JS-YAML's default schema for `safeLoad` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on standard YAML's Core schema and includes most of\n// extra types described at YAML tag repository. (http://yaml.org/type/)\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = new Schema({\n  include: [\n    require('./core')\n  ],\n  implicit: [\n    require('../type/timestamp'),\n    require('../type/merge')\n  ],\n  explicit: [\n    require('../type/binary'),\n    require('../type/omap'),\n    require('../type/pairs'),\n    require('../type/set')\n  ]\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptUndefined() {\n  return true;\n}\n\nfunction constructJavascriptUndefined() {\n  /*eslint-disable no-undefined*/\n  return undefined;\n}\n\nfunction representJavascriptUndefined() {\n  return '';\n}\n\nfunction isUndefined(object) {\n  return typeof object === 'undefined';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/undefined', {\n  kind: 'scalar',\n  resolve: resolveJavascriptUndefined,\n  construct: constructJavascriptUndefined,\n  predicate: isUndefined,\n  represent: representJavascriptUndefined\n});\n","'use strict';\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptRegExp(data) {\n  if (data === null) return false;\n  if (data.length === 0) return false;\n\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // if regexp starts with '/' it can have modifiers and must be properly closed\n  // `/foo/gim` - modifiers tail can be maximum 3 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n\n    if (modifiers.length > 3) return false;\n    // if expression starts with /, is should be properly terminated\n    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;\n  }\n\n  return true;\n}\n\nfunction constructJavascriptRegExp(data) {\n  var regexp = data,\n      tail   = /\\/([gim]*)$/.exec(data),\n      modifiers = '';\n\n  // `/foo/gim` - tail can be maximum 4 chars\n  if (regexp[0] === '/') {\n    if (tail) modifiers = tail[1];\n    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);\n  }\n\n  return new RegExp(regexp, modifiers);\n}\n\nfunction representJavascriptRegExp(object /*, style*/) {\n  var result = '/' + object.source + '/';\n\n  if (object.global) result += 'g';\n  if (object.multiline) result += 'm';\n  if (object.ignoreCase) result += 'i';\n\n  return result;\n}\n\nfunction isRegExp(object) {\n  return Object.prototype.toString.call(object) === '[object RegExp]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/regexp', {\n  kind: 'scalar',\n  resolve: resolveJavascriptRegExp,\n  construct: constructJavascriptRegExp,\n  predicate: isRegExp,\n  represent: representJavascriptRegExp\n});\n","'use strict';\n\nvar esprima;\n\n// Browserified version does not have esprima\n//\n// 1. For node.js just require module as deps\n// 2. For browser try to require mudule via external AMD system.\n//    If not found - try to fallback to window.esprima. If not\n//    found too - then fail to parse.\n//\ntry {\n  // workaround to exclude package from browserify list.\n  var _require = require;\n  esprima = _require('esprima');\n} catch (_) {\n  /* eslint-disable no-redeclare */\n  /* global window */\n  if (typeof window !== 'undefined') esprima = window.esprima;\n}\n\nvar Type = require('../../type');\n\nfunction resolveJavascriptFunction(data) {\n  if (data === null) return false;\n\n  try {\n    var source = '(' + data + ')',\n        ast    = esprima.parse(source, { range: true });\n\n    if (ast.type                    !== 'Program'             ||\n        ast.body.length             !== 1                     ||\n        ast.body[0].type            !== 'ExpressionStatement' ||\n        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n          ast.body[0].expression.type !== 'FunctionExpression')) {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction constructJavascriptFunction(data) {\n  /*jslint evil:true*/\n\n  var source = '(' + data + ')',\n      ast    = esprima.parse(source, { range: true }),\n      params = [],\n      body;\n\n  if (ast.type                    !== 'Program'             ||\n      ast.body.length             !== 1                     ||\n      ast.body[0].type            !== 'ExpressionStatement' ||\n      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&\n        ast.body[0].expression.type !== 'FunctionExpression')) {\n    throw new Error('Failed to resolve function');\n  }\n\n  ast.body[0].expression.params.forEach(function (param) {\n    params.push(param.name);\n  });\n\n  body = ast.body[0].expression.body.range;\n\n  // Esprima's ranges include the first '{' and the last '}' characters on\n  // function expressions. So cut them out.\n  if (ast.body[0].expression.body.type === 'BlockStatement') {\n    /*eslint-disable no-new-func*/\n    return new Function(params, source.slice(body[0] + 1, body[1] - 1));\n  }\n  // ES6 arrow functions can omit the BlockStatement. In that case, just return\n  // the body.\n  /*eslint-disable no-new-func*/\n  return new Function(params, 'return ' + source.slice(body[0], body[1]));\n}\n\nfunction representJavascriptFunction(object /*, style*/) {\n  return object.toString();\n}\n\nfunction isFunction(object) {\n  return Object.prototype.toString.call(object) === '[object Function]';\n}\n\nmodule.exports = new Type('tag:yaml.org,2002:js/function', {\n  kind: 'scalar',\n  resolve: resolveJavascriptFunction,\n  construct: constructJavascriptFunction,\n  predicate: isFunction,\n  represent: representJavascriptFunction\n});\n","// JS-YAML's default schema for `load` function.\n// It is not described in the YAML specification.\n//\n// This schema is based on JS-YAML's default safe schema and includes\n// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.\n//\n// Also this schema is used as default base schema at `Schema.create` function.\n\n\n'use strict';\n\n\nvar Schema = require('../schema');\n\n\nmodule.exports = Schema.DEFAULT = new Schema({\n  include: [\n    require('./default_safe')\n  ],\n  explicit: [\n    require('../type/js/undefined'),\n    require('../type/js/regexp'),\n    require('../type/js/function')\n  ]\n});\n","'use strict';\n\n/*eslint-disable max-len,no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar Mark                = require('./mark');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\n\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;\n  this.onWarning = options['onWarning'] || null;\n  this.legacy    = options['legacy']    || false;\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  return new YAMLException(\n    message,\n    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty.call(overridableKeys, keyNode) &&\n        _hasOwnProperty.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n    _result[keyNode] = valueNode;\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = {},\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _pos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = {},\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n    _pos = state.position;\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n\n    } else {\n      break; // Reading is done. Go to the epilogue.\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if (state.lineIndent > nodeIndent && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag !== null && state.tag !== '!') {\n    if (state.tag === '?') {\n      // Implicit resolving is not allowed for non-scalar types, and '?'\n      // non-specific tag is only automatically assigned to plain scalars.\n      //\n      // We only need to check kind conformity in case user explicitly assigns '?'\n      // tag, for example like this: \"!<?> [0]\"\n      //\n      if (state.result !== null && state.kind !== 'scalar') {\n        throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n      }\n\n      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n        type = state.implicitTypes[typeIndex];\n\n        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n          state.result = type.construct(state.result);\n          state.tag = type.tag;\n          if (state.anchor !== null) {\n            state.anchorMap[state.anchor] = state.result;\n          }\n          break;\n        }\n      }\n    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n\n      if (state.result !== null && type.kind !== state.kind) {\n        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n      }\n\n      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n      } else {\n        state.result = type.construct(state.result);\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = {};\n  state.anchorMap = {};\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new YAMLException('expected a single document in the stream, but found more');\n}\n\n\nfunction safeLoadAll(input, iterator, options) {\n  if (typeof iterator === 'object' && iterator !== null && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  return loadAll(input, iterator, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nfunction safeLoad(input, options) {\n  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\n\nmodule.exports.loadAll     = loadAll;\nmodule.exports.load        = load;\nmodule.exports.safeLoadAll = safeLoadAll;\nmodule.exports.safeLoad    = safeLoad;\n","'use strict';\n\n/*eslint-disable no-use-before-define*/\n\nvar common              = require('./common');\nvar YAMLException       = require('./exception');\nvar DEFAULT_FULL_SCHEMA = require('./schema/default_full');\nvar DEFAULT_SAFE_SCHEMA = require('./schema/default_safe');\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\nfunction State(options) {\n  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// [24] b-line-feed       ::=     #xA    /* LF */\n// [25] b-carriage-return ::=     #xD    /* CR */\n// [3]  c-byte-order-mark ::=     #xFEFF\nfunction isNsChar(c) {\n  return isPrintable(c) && !isWhitespace(c)\n    // byte-order-mark\n    && c !== 0xFEFF\n    // b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// Simplified test for values allowed after the first character in plain style.\nfunction isPlainSafe(c, prev) {\n  // Uses a subset of nb-char - c-flow-indicator - \":\" - \"#\"\n  // where nb-char ::= c-printable - b-char - c-byte-order-mark.\n  return isPrintable(c) && c !== 0xFEFF\n    // - c-flow-indicator\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // - \":\" - \"#\"\n    // /* An ns-char preceding */ \"#\"\n    && c !== CHAR_COLON\n    && ((c !== CHAR_SHARP) || (prev && isNsChar(prev)));\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  return isPrintable(c) && c !== 0xFEFF\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {\n  var i;\n  var char, prev_char;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(string.charCodeAt(0))\n          && !isWhitespace(string.charCodeAt(string.length - 1));\n\n  if (singleLineOnly) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; i++) {\n      char = string.charCodeAt(i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      prev_char = i > 0 ? string.charCodeAt(i - 1) : null;\n      plain = plain && isPlainSafe(char, prev_char);\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    return plain && !testAmbiguousType(string)\n      ? STYLE_PLAIN : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return \"''\";\n    }\n    if (!state.noCompatMode &&\n        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {\n      return \"'\" + string + \"'\";\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string, lineWidth) + '\"';\n      default:\n        throw new YAMLException('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char, nextChar;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; i++) {\n    char = string.charCodeAt(i);\n    // Check for surrogate pairs (reference Unicode 3.0 section \"3.7 Surrogates\").\n    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {\n      nextChar = string.charCodeAt(i + 1);\n      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {\n        // Combine the surrogate pair and store it escaped.\n        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);\n        // Advance index one extra since we already used that char here.\n        i++; continue;\n      }\n    }\n    escapeSeq = ESCAPE_SEQUENCES[char];\n    result += !escapeSeq && isPrintable(char)\n      ? string[i]\n      : escapeSeq || encodeHex(char);\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level, object[index], false, false)) {\n      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    // Write only valid elements.\n    if (writeNode(state, level + 1, object[index], true, true)) {\n      if (!compact || index !== 0) {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (index !== 0) pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new YAMLException('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || index !== 0) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      state.tag = explicit ? type.tag : '?';\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;\n      if (block && (state.dump.length !== 0)) {\n        writeBlockSequence(state, arrayLevel, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, arrayLevel, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey);\n      }\n    } else {\n      if (state.skipInvalid) return false;\n      throw new YAMLException('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      state.dump = '!<' + state.tag + '> ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  if (writeNode(state, 0, input, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nfunction safeDump(input, options) {\n  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));\n}\n\nmodule.exports.dump     = dump;\nmodule.exports.safeDump = safeDump;\n","'use strict';\n\n\nvar loader = require('./js-yaml/loader');\nvar dumper = require('./js-yaml/dumper');\n\n\nfunction deprecated(name) {\n  return function () {\n    throw new Error('Function ' + name + ' is deprecated and cannot be used.');\n  };\n}\n\n\nmodule.exports.Type                = require('./js-yaml/type');\nmodule.exports.Schema              = require('./js-yaml/schema');\nmodule.exports.FAILSAFE_SCHEMA     = require('./js-yaml/schema/failsafe');\nmodule.exports.JSON_SCHEMA         = require('./js-yaml/schema/json');\nmodule.exports.CORE_SCHEMA         = require('./js-yaml/schema/core');\nmodule.exports.DEFAULT_SAFE_SCHEMA = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_FULL_SCHEMA = require('./js-yaml/schema/default_full');\nmodule.exports.load                = loader.load;\nmodule.exports.loadAll             = loader.loadAll;\nmodule.exports.safeLoad            = loader.safeLoad;\nmodule.exports.safeLoadAll         = loader.safeLoadAll;\nmodule.exports.dump                = dumper.dump;\nmodule.exports.safeDump            = dumper.safeDump;\nmodule.exports.YAMLException       = require('./js-yaml/exception');\n\n// Deprecated schema names from JS-YAML 2.0.x\nmodule.exports.MINIMAL_SCHEMA = require('./js-yaml/schema/failsafe');\nmodule.exports.SAFE_SCHEMA    = require('./js-yaml/schema/default_safe');\nmodule.exports.DEFAULT_SCHEMA = require('./js-yaml/schema/default_full');\n\n// Deprecated functions from JS-YAML 1.x.x\nmodule.exports.scan           = deprecated('scan');\nmodule.exports.parse          = deprecated('parse');\nmodule.exports.compose        = deprecated('compose');\nmodule.exports.addConstructor = deprecated('addConstructor');\n","'use strict';\n\n\nvar yaml = require('./lib/js-yaml.js');\n\n\nmodule.exports = yaml;\n","import * as YAML from 'js-yaml';\nexport default (function FrontMatterPlugin(md) {\n    md.block.ruler.before('code', 'front-matter', function (state, startLine, endLine) {\n        function get(line) {\n            var pos = state.bMarks[line];\n            var max = state.eMarks[line];\n            return state.src.substr(pos, max - pos);\n        }\n        if (startLine > 0 || state.blkIndent > 0) {\n            return false;\n        }\n        if (state.tShift[startLine] < 0) {\n            return false;\n        }\n        if (!get(startLine).match(/^---$/)) {\n            return false;\n        }\n        var data = [];\n        var line;\n        for (line = startLine + 1; line < endLine; line++) {\n            var str = get(line);\n            if (str.match(/^---$/)) {\n                break;\n            }\n            if (state.tShift[line] < 0) {\n                break;\n            }\n            data.push(str);\n        }\n        if (line >= endLine) {\n            return false;\n        }\n        state.env.frontMatter = YAML.safeLoad(data.join('\\n')) || {};\n        state.line = ++line;\n        return true;\n    }, {});\n});\n","<template>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"flex flex-col items-start gap-4\">\n      <input ref=\"uploads\" @change=\"updateFiles\" type=\"file\" id=\"markdown-file-uploader\" multiple accept=\".md,.markdown,text/markdown\" class=\"hidden\" />\n      <button class=\"button button-size-medium button-color-gray gap-3\" @click=\"selectFiles\">\n        <svg class=\"w-4\" viewBox=\"0 0 20 20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.75\" stroke-miterlimit=\"5\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n          <path d=\"M10 13V4M10 4L13 7M10 4L7 7\"/>\n          <path d=\"M2 13V15C2 15.5523 2.44772 16 3 16H17C17.5523 16 18 15.5523 18 15V13\"/>\n        </svg>\n        <span>Choose Markdown files to import</span>\n      </button>\n      <ul v-if=\"fileNames.length\">\n        <li v-for=\"fileName in fileNames\">{{ fileName }}</li>\n      </ul>\n      <button class=\"button button-size-medium button-color-gray\" @click=\"importFiles\">Import</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Doc from '/src/models/doc.js'\nimport { Remarkable } from 'remarkable';\nimport frontMatterPlugin from 'remarkable-front-matter';\nvar md = new Remarkable();\nmd.use(frontMatterPlugin);\n\nexport default {\n  data() {\n    return {\n      files: [],\n      text: '',\n    }\n  },\n  computed: {\n    fileNames() {\n      return this.files.map(file => file.name)\n    },\n  },\n  methods: {\n    importFiles() {\n      this.files.forEach((file) => {\n        const reader = new FileReader()\n\n        reader.onerror = error => reject(error)\n        reader.onload = event => {\n          const fileText = event.target.result\n          const env = { frontMatter: {} }\n\n          // Populate env.frontMatter\n          md.render(fileText, env)\n\n          const { id } = env.frontMatter;\n          const text = fileText.replace(/^---.*?---/s, '').trim()\n\n          try {\n            this.importDoc({ id, text })\n          } catch (error) {\n            console.warn({ error })\n          }\n\n          // Remove the file from the list.\n          this.files.splice(this.files.indexOf(file), 1)\n        }\n\n        reader.readAsText(file)\n      })\n\n    },\n    importDoc({ id, text }) {\n      if (id) {\n        const existingDoc = this.$store.getters.decrypted.find(doc => doc.id === id)\n\n        if (existingDoc) {\n          return this.$store.commit('EDIT_DOCUMENT', {\n            id: existingDoc.id,\n            text,\n          })\n        }\n      }\n\n      return this.$store.commit('EDIT_DOCUMENT', new Doc({ text }))\n    },\n    selectFiles() {\n      this.$refs.uploads.click()\n    },\n    updateFiles() {\n      this.files = [...(this.$refs.uploads.files ? this.$refs.uploads.files : [])]\n    },\n    updateText(event) {\n      this.text = event.target.innerText\n    },\n  },\n}\n</script>\n"],"names":["str","code","fences","hr","getBreak","_rules","list","text","rules","i","mark","common","YAMLException","require$$0","Mark","toString","map","Type","require$$1","require$$2","schema","type","Schema","require$$3","require$$4","require$$5","_require","require","_hasOwnProperty","_toString","require$$6","require$$7","regexp","DEFAULT_SAFE_SCHEMA","DEFAULT_FULL_SCHEMA","State","loader","string","block","dumper","jsYaml","require$$8","require$$9","md","line","YAML.safeLoad","_createElementVNode","_openBlock","_createElementBlock","_toDisplayString"],"mappings":"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"}