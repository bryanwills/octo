{"version":3,"file":"settings-411b18d8.js","sources":["../../components/settings/Appearance.vue","../../components/Banner.vue","../../components/PageContainer.vue","../../components/SettingsEditor.vue","../../components/settings/Encryption.vue","../../components/settings/Experimental.vue"],"sourcesContent":["<template>\n  <section>\n    <h3 class=\"text-3xl\">Appearance</h3>\n    <hr class=\"mt-2 mb-4\" />\n    <Extendable scope=\"app.settings.appearance\">\n      <div class=\"mb-4\">\n        <div>\n          <label class=\"button button-size-medium button-color-gray\">\n            <input v-model=\"appearance\" type=\"radio\" value=\"auto\" class=\"radio\" />\n            <span class=\"ml-3\">Auto</span>\n          </label>\n          <label class=\"button button-size-medium button-color-gray ml-2\">\n            <input v-model=\"appearance\" type=\"radio\" value=\"dark\" class=\"radio\" />\n            <span class=\"ml-3\">Dark</span>\n          </label>\n          <label class=\"button button-size-medium button-color-gray ml-2\">\n            <input v-model=\"appearance\" type=\"radio\" value=\"light\" class=\"radio\" />\n            <span class=\"ml-3\">Light</span>\n          </label>\n          <label class=\"button button-size-medium button-color-gray ml-2\">\n            <input v-model=\"appearance\" type=\"radio\" value=\"october\" class=\"radio\" />\n            <span class=\"ml-3\">Spooky</span>\n          </label>\n        </div>\n      </div>\n    </Extendable>\n  </section>\n</template>\n\n<script>\nimport { defineComponent, inject } from 'vue'\n\nexport default defineComponent({\n  setup() {\n    const appearance = inject('appearance')\n\n    return {\n      appearance,\n    }\n  }\n})\n</script>\n","<template>\n  <section v-if=\"!subscription.pro\" class=\"bg-gray-100 dark:bg-darkest text-center xl:text-left shadow rounded p-4 md:p-2\">\n    <div class=\"flex flex-col lg:flex-row items-center justify-between gap-4\">\n      <strong class=\"inline-flex items-center lg:ml-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 11l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z\" />\n        </svg>\n        <span class=\"whitespace-nowrap ml-2\">Octo Pro</span>\n      </strong>\n      <div class=\"lg:ml-2 xl:ml-4\">Share your docs, attach files, and get early access to new features.</div>\n      <div class=\"flex items-center justify-end\">\n        <CoreLink @click=\"trackCta\" :to=\"{ path: '/account' }\" class=\"button-flat button-color-surface button-size-medium w-full whitespace-nowrap lg:ml-2 text-blue-400\">Learn More</CoreLink>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport { subscription } from '/src/common/account'\n\nconst trackCta = () => {\n  // @ts-ignore\n  window.fathom.trackGoal(import.meta.env.VITE_FATHOM_EVENT_CTA_SETTINGS_UPGRADE, 0)\n}\n</script>\n","<template>\n  <div class=\"container flex flex-col mx-auto p-4 md:px-16 md:py-8\">\n    <slot />\n  </div>\n</template>\n","<template>\n  <section>\n    <h3 class=\"text-3xl\">Editor</h3>\n    <hr class=\"mt-2 mb-4\">\n    <p class=\"mb-6\">Configure settings for Ink - the Markdown editor that powers Octo.</p>\n    <Extendable scope=\"app.settings.editor\">\n      <div class=\"mb-4\">\n        <div>\n          <label class=\"button button-size-medium button-color-gray items-center\">\n            <input v-model=\"spellcheck\" type=\"checkbox\" class=\"checkbox\">\n            <span class=\"ml-3\">Spellcheck</span>\n          </label>\n        </div>\n        <small class=\"text-gray-700\">Note: This will not disable Grammarly if you have the extension enabled.</small>\n      </div>\n      <div class=\"mb-4\">\n        <div>\n          <label class=\"button button-size-medium button-color-gray items-center\">\n            <input v-model=\"vim\" type=\"checkbox\" class=\"checkbox\">\n            <span class=\"ml-3\">Vim Mode</span>\n          </label>\n        </div>\n        <small class=\"text-gray-700\">Use Vim keybindings to edit your docs.</small>\n      </div>\n      <div class=\"mb-4\">\n        <label for=\"config-tab-size\">Tab length</label>\n        <input v-model=\"tabSize\" type=\"number\" min=\"2\" id=\"config-tab-size\" class=\"form-text w-full\">\n        <small class=\"text-gray-700\">Set the number of spaces to use for each tab (minimum: 2).</small>\n      </div>\n      <div class=\"mb-4\">\n        <h4 class=\"text-2xl mb-2\">Readability Information</h4>\n        <p class=\"mb-2\">The Readability Bar shows useful information such as word count and read time at the bottom of the editor.</p>\n        <div class=\"mb-4\">\n          <div>\n            <label class=\"button button-size-medium button-color-gray items-center\">\n              <input v-model=\"readabilityEnabled\" type=\"checkbox\" class=\"checkbox\">\n              <span class=\"ml-3 \">Toggle Readability Bar</span>\n            </label>\n          </div>\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"config-tab-size\">Reading Speed (words per minute)</label>\n          <input v-model=\"readabilityWordsPerMinute\" type=\"number\" min=\"2\" id=\"config-tab-size\" class=\"form-text w-full\">\n          <small class=\"text-gray-700\">Reading speed is used to estimate document read time.</small>\n        </div>\n        <div class=\"mb-4\">\n          <label for=\"config-max-width\">Max Width of Editor (in number of characters)</label>\n          <input v-model=\"readabilityMaxWidth\" type=\"number\" min=\"40\" id=\"config-max-width\" class=\"form-text w-full\">\n          <small class=\"text-gray-700\">Values between 60 and 100 are common.</small>\n        </div>\n      </div>\n      <div class=\"mb-4\">\n        <h4 class=\"text-2xl mb-2\">Formatting Toolbar</h4>\n        <p class=\"mb-2\">Display the formatting toolbar in the editor.</p>\n        <div class=\"mb-4\">\n          <label class=\"button button-size-medium button-color-gray items-center\">\n            <input v-model=\"toolbar\" type=\"checkbox\" class=\"checkbox\">\n            <span class=\"ml-3 \">Enable Toolbar</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"mb-4\">\n        <h4 class=\"text-2xl mb-2\">Font Ligatures</h4>\n        <p class=\"mb-2\">Render <a href=\"https://github.com/tonsky/FiraCode#whats-in-the-box\" target=\"_blank\" rel=\"noopener noreferrer\">font ligatures</a> (e.g. <code class=\"monospace ligatures-normal\">=></code>).</p>\n        <div class=\"mb-4\">\n          <label class=\"button button-size-medium button-color-gray items-center\">\n            <input v-model=\"ligatures\" type=\"checkbox\" class=\"checkbox\">\n            <span class=\"ml-3 \">Enable Ligatures</span>\n          </label>\n        </div>\n      </div>\n      <div class=\"mb-4\">\n        <h4 class=\"text-2xl mb-2\">Images</h4>\n        <p class=\"mb-2\">This setting determines whether or not image tags (e.g. <code class=\"bg-gray-100 dark:bg-darkest p-0.5 rounded\">![alt text](/path/to/image)</code>) will render images in your docs.</p>\n        <div class=\"mb-4\">\n          <div>\n            <label class=\"button button-size-medium button-color-gray items-center\">\n              <input v-model=\"imagesEnabled\" type=\"checkbox\" class=\"checkbox\">\n              <span class=\"ml-3 \">Enable Images</span>\n            </label>\n          </div>\n        </div>\n      </div>\n      <div class=\"mb-4\">\n        <h4 class=\"text-2xl mb-2\">List Overlays</h4>\n        <p class=\"mb-2\">This setting enables overlays for bullet and task lists. Task lists will render an interactive checkbox in place of <code class=\"bg-gray-100 dark:bg-darkest p-0.5 rounded\">- [ ]</code> or <code class=\"bg-gray-100 dark:bg-darkest p-0.5 rounded\">- [x]</code>.</p>\n        <div class=\"mb-4\">\n          <div>\n            <label class=\"button button-size-medium button-color-gray items-center\">\n              <input v-model=\"listsEnabled\" type=\"checkbox\" class=\"checkbox\">\n              <span class=\"ml-3 \">Enable List Overlays</span>\n            </label>\n          </div>\n        </div>\n      </div>\n    </Extendable>\n  </section>\n</template>\n\n<script>\nimport {\n  SET_EDITOR_IMAGES_ENABLED,\n  SET_EDITOR_IMAGES_SHOW_CAPTIONS,\n  SET_EDITOR_KEY_MAP,\n  SET_EDITOR_LIGATURES,\n  SET_EDITOR_LISTS_ENABLED,\n  SET_EDITOR_READABILITY_ENABLED,\n  SET_EDITOR_READABILITY_MAX_WIDTH,\n  SET_EDITOR_READABILITY_WORDS_PER_MINUTE,\n  SET_EDITOR_SPELLCHECK,\n  SET_EDITOR_TAB_SIZE,\n  SET_EDITOR_TOOLBAR,\n} from '/src/store/modules/settings.js'\n\nexport default {\n  computed: {\n    imagesEnabled: {\n      get() {\n        return this.$store.state.settings.editor.images.enabled\n      },\n      set(value) {\n        this.$store.dispatch(SET_EDITOR_IMAGES_ENABLED, value)\n      },\n    },\n    ligatures: {\n      get() {\n        return this.$store.state.settings.editor.ligatures\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_LIGATURES, value)\n      },\n    },\n    listsEnabled: {\n      get() {\n        return this.$store.state.settings.editor.lists.enabled\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_LISTS_ENABLED, value)\n      },\n    },\n    readabilityEnabled: {\n      get() {\n        return this.$store.state.settings.editor.readability.enabled\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_READABILITY_ENABLED, value)\n      },\n    },\n    readabilityMaxWidth: {\n      get() {\n        return this.$store.state.settings.editor.readability.maxWidthInChars\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_READABILITY_MAX_WIDTH, value)\n      },\n    },\n    readabilityWordsPerMinute: {\n      get() {\n        return this.$store.state.settings.editor.readability.wordsPerMinute\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_READABILITY_WORDS_PER_MINUTE, value)\n      },\n    },\n    showCaptions: {\n      get() {\n        return this.$store.state.settings.editor.images.showCaptions\n      },\n      set(value) {\n        this.$store.dispatch(SET_EDITOR_IMAGES_SHOW_CAPTIONS, value)\n      },\n    },\n    spellcheck: {\n      get() {\n        return this.$store.state.settings.editor.spellcheck\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_SPELLCHECK, value)\n      },\n    },\n    tabSize: {\n      get() {\n        return this.$store.state.settings.editor.tabSize\n      },\n      set(value) {\n        this.$store.dispatch(SET_EDITOR_TAB_SIZE, parseInt(value) || 2)\n      },\n    },\n    toolbar: {\n      get() {\n        return this.$store.state.settings.editor.toolbar\n      },\n      set(value) {\n        this.$store.commit(SET_EDITOR_TOOLBAR, value)\n      },\n    },\n    vim: {\n      // Todo: Use a new setting for Vim.\n      get() {\n        return this.$store.state.settings.editor.keyMap === 'vim'\n      },\n      set(value) {\n        this.$store.dispatch(SET_EDITOR_KEY_MAP, value ? 'vim' : 'default')\n      },\n    },\n  },\n}\n</script>\n","<template>\n  <section>\n    <h3 class=\"text-3xl\">Client-side Encryption</h3>\n    <hr class=\"mt-2 mb-4\">\n    <div class=\"mb-4\">\n      <label for=\"tags-search\">Documents are encrypted using a <a href=\"https://en.wikipedia.org/wiki/Hybrid_cryptosystem\" target=\"_blank\" rel=\"noopener noreferrer\">hybrid cryptosystem</a>. You may provide your own keys or generate a new set here. If you choose to generate a new set, be sure to <strong>make a secure backup of your keys</strong>. If you lose your private key, you will not be able to recover any data that is encrypted.</label>\n    </div>\n    <div class=\"mb-4\">\n      <div>\n        <label class=\"button button-size-medium button-color-gray\">\n          <input\n            v-model=\"toggleCrypto\"\n            :disabled=\"!allowCrypto || togglingCrypto\"\n            type=\"checkbox\"\n            class=\"checkbox\"\n            data-test-toggle-crypto\n          >\n          <span class=\"ml-3\">Enable Encryption</span>\n        </label>\n      </div>\n      <small class=\"text-gray-700\">Note: Toggling encryption will encrypt/decrypt all existing documents. <span v-if=\"!allowCrypto\">Enabling encryption <strong>requires</strong> private/public keys. Generate or supply them below to enable.</span></small>\n    </div>\n    <div class=\"mb-4\">\n      <label>Private Key</label>\n      <textarea\n        v-model=\"privateKey\"\n        class=\"form-text w-full\"\n        rows=\"5\"\n        placeholder=\"Private key\"\n        autocomplete=\"off\"\n        data-test-private-key\n      ></textarea>\n      <small class=\"text-gray-700\">This key is used to <em>decrypt</em> documents. It <strong>will not</strong> be synced across devices when signed in.</small>\n    </div>\n    <div class=\"mb-4\">\n      <label>Public Key</label>\n      <textarea\n        v-model=\"publicKey\"\n        class=\"form-text w-full\"\n        rows=\"5\"\n        placeholder=\"Public key\"\n        autocomplete=\"off\"\n        data-test-public-key\n      ></textarea>\n      <small class=\"text-gray-700\">This key is used to <em>encrypt</em> documents. It <strong>will</strong> be synced across devices when signed in.</small>\n    </div>\n    <div class=\"mb-4\">\n      <button @click=\"generateKeys\" class=\"button button-size-medium button-color-gray\">Generate Keys</button>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { exportKeys, generateKeys } from '/src/common/crypto/asymmetric.js';\n\nimport { TOUCH_DOCUMENT } from '/src/store/actions.js';\n\nimport {\n  SET_CRYPTO_ENABLED,\n  SET_CRYPTO_KEYS,\n} from '/src/store/modules/settings.js';\n\nexport default {\n  data() {\n    return {\n      togglingCrypto: false,\n    };\n  },\n  computed: {\n    allowCrypto() {\n      return this.privateKey && this.publicKey;\n    },\n    privateKey: {\n      get() {\n        return this.$store.state.settings.crypto.privateKey;\n      },\n      set(value) {\n        this.$store.commit(SET_CRYPTO_KEYS, {\n          privateKey: value.trim(),\n        });\n      },\n    },\n    publicKey: {\n      get() {\n        return this.$store.state.settings.crypto.publicKey;\n      },\n      set(value) {\n        this.$store.commit(SET_CRYPTO_KEYS, {\n          publicKey: value.trim(),\n        });\n      },\n    },\n    toggleCrypto: {\n      get() {\n        return this.$store.state.settings.crypto.enabled;\n      },\n      async set(value) {\n        this.togglingCrypto = true;\n\n        await this.$store.dispatch(SET_CRYPTO_ENABLED, value);\n        await Promise.all(\n          this.$store.getters.decrypted.map((doc) => {\n            return this.$store.dispatch(TOUCH_DOCUMENT, doc);\n          })\n        );\n\n        this.togglingCrypto = false;\n      },\n    },\n  },\n  methods: {\n    async generateKeys() {\n      const keys = await generateKeys();\n      const { privateKey, publicKey } = await exportKeys(keys);\n\n      this.privateKey = privateKey;\n      this.publicKey = publicKey;\n    },\n  },\n};\n</script>\n","<template>\n  <section>\n    <h3 class=\"text-3xl\">Experimental Features</h3>\n    <hr class=\"mt-2 mb-4\">\n    <div class=\"flex flex-col gap-4\">\n      <p>These features may be changed or removed at any time.</p>\n      <ul class=\"flex flex-col gap-1 list-disc pl-4\">\n        <li>Edit plain-text Markdown files that reside on your device (in supported browsers)</li>\n        <li>Render live Mermaid (UML) diagrams above applicable code blocks</li>\n      </ul>\n      <div>\n        <label class=\"button button-size-medium button-color-gray items-center\">\n          <input v-model=\"experimental\" type=\"checkbox\" class=\"checkbox\">\n          <span class=\"ml-3 \">Enable Experimental Features</span>\n        </label>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { SET_EXPERIMENTAL } from '/src/store/modules/settings'\n\nconst { commit, state } = useStore()\nconst experimental = computed({\n  get() {\n    return state.settings.experimental\n  },\n  set(value: boolean) {\n    commit(SET_EXPERIMENTAL, value)\n  },\n})\n</script>\n"],"names":["_sfc_main","_hoisted_1","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_sfc_render","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17"],"mappings":"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"}