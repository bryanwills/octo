{"version":3,"file":"stex.bb423439.js","sources":["../../node_modules/@codemirror/legacy-modes/mode/stex.js"],"sourcesContent":["function mkStex(mathMode) {\n  function pushCommand(state, command) {\n    state.cmdState.push(command);\n  }\n\n  function peekCommand(state) {\n    if (state.cmdState.length > 0) {\n      return state.cmdState[state.cmdState.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  function popCommand(state) {\n    var plug = state.cmdState.pop();\n    if (plug) {\n      plug.closeBracket();\n    }\n  }\n\n  // returns the non-default plugin closest to the end of the list\n  function getMostPowerful(state) {\n    var context = state.cmdState;\n    for (var i = context.length - 1; i >= 0; i--) {\n      var plug = context[i];\n      if (plug.name == \"DEFAULT\") {\n        continue;\n      }\n      return plug;\n    }\n    return { styleIdentifier: function() { return null; } };\n  }\n\n  function addPluginPattern(pluginName, cmdStyle, styles) {\n    return function () {\n      this.name = pluginName;\n      this.bracketNo = 0;\n      this.style = cmdStyle;\n      this.styles = styles;\n      this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n      this.styleIdentifier = function() {\n        return this.styles[this.bracketNo - 1] || null;\n      };\n      this.openBracket = function() {\n        this.bracketNo++;\n        return \"bracket\";\n      };\n      this.closeBracket = function() {};\n    };\n  }\n\n  var plugins = {};\n\n  plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n  plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n  plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n  plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n  plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n  plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n  plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n  plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n  plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n  plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n  plugins[\"DEFAULT\"] = function () {\n    this.name = \"DEFAULT\";\n    this.style = \"tag\";\n\n    this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n  };\n\n  function setState(state, f) {\n    state.f = f;\n  }\n\n  // called when in a normal (no environment) context\n  function normal(source, state) {\n    var plug;\n    // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      var cmdName = source.current().slice(1);\n      plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      setState(state, beginParams);\n      return plug.style;\n    }\n\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n      return \"tag\";\n    }\n\n    // find if we're starting various math modes\n    if (source.match(\"\\\\[\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"\\\\(\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n      return \"keyword\";\n    }\n\n    var ch = source.next();\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    } else if (ch == '}' || ch == ']') {\n      plug = peekCommand(state);\n      if (plug) {\n        plug.closeBracket(ch);\n        setState(state, beginParams);\n      } else {\n        return \"error\";\n      }\n      return \"bracket\";\n    } else if (ch == '{' || ch == '[') {\n      plug = plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      return \"bracket\";\n    } else if (/\\d/.test(ch)) {\n      source.eatWhile(/[\\w.%]/);\n      return \"atom\";\n    } else {\n      source.eatWhile(/[\\w\\-_]/);\n      plug = getMostPowerful(state);\n      if (plug.name == 'begin') {\n        plug.argument = source.current();\n      }\n      return plug.styleIdentifier();\n    }\n  }\n\n  function inMathMode(source, state, endModeSeq) {\n    if (source.eatSpace()) {\n      return null;\n    }\n    if (endModeSeq && source.match(endModeSeq)) {\n      setState(state, normal);\n      return \"keyword\";\n    }\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      return \"tag\";\n    }\n    if (source.match(/^[a-zA-Z]+/)) {\n      return \"variableName.special\";\n    }\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/]/)) {\n      return \"tag\";\n    }\n    // special math-mode characters\n    if (source.match(/^[\\^_&]/)) {\n      return \"tag\";\n    }\n    // non-special characters\n    if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n      return null;\n    }\n    if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n      return \"number\";\n    }\n    var ch = source.next();\n    if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    }\n\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    }\n    return \"error\";\n  }\n\n  function beginParams(source, state) {\n    var ch = source.peek(), lastPlug;\n    if (ch == '{' || ch == '[') {\n      lastPlug = peekCommand(state);\n      lastPlug.openBracket(ch);\n      source.eat(ch);\n      setState(state, normal);\n      return \"bracket\";\n    }\n    if (/[ \\t\\r]/.test(ch)) {\n      source.eat(ch);\n      return null;\n    }\n    setState(state, normal);\n    popCommand(state);\n\n    return normal(source, state);\n  }\n\n  return {\n    startState: function() {\n      var f = mathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n      return {\n        cmdState: [],\n        f: f\n      };\n    },\n    copyState: function(s) {\n      return {\n        cmdState: s.cmdState.slice(),\n        f: s.f\n      };\n    },\n    token: function(stream, state) {\n      return state.f(stream, state);\n    },\n    blankLine: function(state) {\n      state.f = normal;\n      state.cmdState.length = 0;\n    },\n    languageData: {\n      commentTokens: {line: \"%\"}\n    }\n  };\n};\n\nexport const stex = mkStex(false)\nexport const stexMath = mkStex(true)\n"],"names":["source","state"],"mappings":"AAAA,SAAS,OAAO,UAAU;AACxB,WAAS,YAAY,OAAO,SAAS;AACnC,UAAM,SAAS,KAAK,OAAO;AAAA,EAC5B;AAED,WAAS,YAAY,OAAO;AAC1B,QAAI,MAAM,SAAS,SAAS,GAAG;AAC7B,aAAO,MAAM,SAAS,MAAM,SAAS,SAAS;AAAA,IACpD,OAAW;AACL,aAAO;AAAA,IACR;AAAA,EACF;AAED,WAAS,WAAW,OAAO;AACzB,QAAI,OAAO,MAAM,SAAS,IAAG;AAC7B,QAAI,MAAM;AACR,WAAK,aAAY;AAAA,IAClB;AAAA,EACF;AAGD,WAAS,gBAAgB,OAAO;AAC9B,QAAI,UAAU,MAAM;AACpB,aAAS,IAAI,QAAQ,SAAS,GAAG,KAAK,GAAG,KAAK;AAC5C,UAAI,OAAO,QAAQ;AACnB,UAAI,KAAK,QAAQ,WAAW;AAC1B;AAAA,MACD;AACD,aAAO;AAAA,IACR;AACD,WAAO,EAAE,iBAAiB,WAAW;AAAE,aAAO;AAAA,IAAO,EAAA;AAAA,EACtD;AAED,WAAS,iBAAiB,YAAY,UAAU,QAAQ;AACtD,WAAO,WAAY;AACjB,WAAK,OAAO;AACZ,WAAK,YAAY;AACjB,WAAK,QAAQ;AACb,WAAK,SAAS;AACd,WAAK,WAAW;AAEhB,WAAK,kBAAkB,WAAW;AAChC,eAAO,KAAK,OAAO,KAAK,YAAY,MAAM;AAAA,MAClD;AACM,WAAK,cAAc,WAAW;AAC5B,aAAK;AACL,eAAO;AAAA,MACf;AACM,WAAK,eAAe,WAAW;AAAA;IACrC;AAAA,EACG;AAED,MAAI,UAAU,CAAA;AAEd,UAAQ,kBAAkB,iBAAiB,gBAAgB,OAAO,CAAC,UAAU,SAAS,CAAC;AACvF,UAAQ,mBAAmB,iBAAiB,iBAAiB,OAAO,CAAC,IAAI,MAAM,CAAC;AAChF,UAAQ,gBAAgB,iBAAiB,cAAc,OAAO,CAAC,MAAM,CAAC;AACtE,UAAQ,WAAW,iBAAiB,SAAS,OAAO,CAAC,MAAM,CAAC;AAC5D,UAAQ,SAAS,iBAAiB,OAAO,OAAO,CAAC,MAAM,CAAC;AAExD,UAAQ,WAAe,iBAAiB,SAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,SAAe,iBAAiB,OAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,WAAe,iBAAiB,SAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,UAAe,iBAAiB,QAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,aAAe,iBAAiB,WAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,aAAe,iBAAiB,WAAa,OAAO,CAAC,MAAM,CAAC;AACpE,UAAQ,cAAe,iBAAiB,YAAa,OAAO,CAAC,MAAM,CAAC;AAEpE,UAAQ,aAAa,WAAY;AAC/B,SAAK,OAAO;AACZ,SAAK,QAAQ;AAEb,SAAK,kBAAkB,KAAK,cAAc,KAAK,eAAe,WAAW;AAAA;EAC7E;AAEE,WAAS,SAAS,OAAO,GAAG;AAC1B,UAAM,IAAI;AAAA,EACX;AAGD,WAAS,OAAO,QAAQ,OAAO;AAC7B,QAAI;AAEJ,QAAI,OAAO,MAAM,eAAe,GAAG;AACjC,UAAI,UAAU,OAAO,QAAS,EAAC,MAAM,CAAC;AACtC,aAAO,QAAQ,eAAe,OAAO,IAAI,QAAQ,WAAW,QAAQ;AACpE,aAAO,IAAI;AACX,kBAAY,OAAO,IAAI;AACvB,eAAS,OAAO,WAAW;AAC3B,aAAO,KAAK;AAAA,IACb;AAGD,QAAI,OAAO,MAAM,cAAc,GAAG;AAChC,aAAO;AAAA,IACR;AAGD,QAAI,OAAO,MAAM,cAAc,GAAG;AAChC,aAAO;AAAA,IACR;AAGD,QAAI,OAAO,MAAM,KAAK,GAAG;AACvB,eAAS,OAAO,SAASA,SAAQC,QAAM;AAAE,eAAO,WAAWD,SAAQC,QAAO,KAAK;AAAA,MAAI,CAAA;AACnF,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,KAAK,GAAG;AACvB,eAAS,OAAO,SAASD,SAAQC,QAAM;AAAE,eAAO,WAAWD,SAAQC,QAAO,KAAK;AAAA,MAAI,CAAA;AACnF,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,IAAI,GAAG;AACtB,eAAS,OAAO,SAASD,SAAQC,QAAM;AAAE,eAAO,WAAWD,SAAQC,QAAO,IAAI;AAAA,MAAI,CAAA;AAClF,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,GAAG,GAAG;AACrB,eAAS,OAAO,SAASD,SAAQC,QAAM;AAAE,eAAO,WAAWD,SAAQC,QAAO,GAAG;AAAA,MAAI,CAAA;AACjF,aAAO;AAAA,IACR;AAED,QAAI,KAAK,OAAO;AAChB,QAAI,MAAM,KAAK;AACb,aAAO,UAAS;AAChB,aAAO;AAAA,IACR,WAAU,MAAM,OAAO,MAAM,KAAK;AACjC,aAAO,YAAY,KAAK;AACxB,UAAI,MAAM;AACR,aAAK,aAAa,EAAE;AACpB,iBAAS,OAAO,WAAW;AAAA,MACnC,OAAa;AACL,eAAO;AAAA,MACR;AACD,aAAO;AAAA,IACR,WAAU,MAAM,OAAO,MAAM,KAAK;AACjC,aAAO,QAAQ;AACf,aAAO,IAAI;AACX,kBAAY,OAAO,IAAI;AACvB,aAAO;AAAA,IACR,WAAU,KAAK,KAAK,EAAE,GAAG;AACxB,aAAO,SAAS,QAAQ;AACxB,aAAO;AAAA,IACb,OAAW;AACL,aAAO,SAAS,SAAS;AACzB,aAAO,gBAAgB,KAAK;AAC5B,UAAI,KAAK,QAAQ,SAAS;AACxB,aAAK,WAAW,OAAO;MACxB;AACD,aAAO,KAAK;IACb;AAAA,EACF;AAED,WAAS,WAAW,QAAQ,OAAO,YAAY;AAC7C,QAAI,OAAO,YAAY;AACrB,aAAO;AAAA,IACR;AACD,QAAI,cAAc,OAAO,MAAM,UAAU,GAAG;AAC1C,eAAS,OAAO,MAAM;AACtB,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,eAAe,GAAG;AACjC,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,YAAY,GAAG;AAC9B,aAAO;AAAA,IACR;AAED,QAAI,OAAO,MAAM,cAAc,GAAG;AAChC,aAAO;AAAA,IACR;AAED,QAAI,OAAO,MAAM,YAAY,GAAG;AAC9B,aAAO;AAAA,IACR;AAED,QAAI,OAAO,MAAM,SAAS,GAAG;AAC3B,aAAO;AAAA,IACR;AAED,QAAI,OAAO,MAAM,0BAA0B,GAAG;AAC5C,aAAO;AAAA,IACR;AACD,QAAI,OAAO,MAAM,0BAA0B,GAAG;AAC5C,aAAO;AAAA,IACR;AACD,QAAI,KAAK,OAAO;AAChB,QAAI,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,KAAK;AAC9E,aAAO;AAAA,IACR;AAED,QAAI,MAAM,KAAK;AACb,aAAO,UAAS;AAChB,aAAO;AAAA,IACR;AACD,WAAO;AAAA,EACR;AAED,WAAS,YAAY,QAAQ,OAAO;AAClC,QAAI,KAAK,OAAO,KAAI,GAAI;AACxB,QAAI,MAAM,OAAO,MAAM,KAAK;AAC1B,iBAAW,YAAY,KAAK;AAC5B,eAAS,YAAY,EAAE;AACvB,aAAO,IAAI,EAAE;AACb,eAAS,OAAO,MAAM;AACtB,aAAO;AAAA,IACR;AACD,QAAI,UAAU,KAAK,EAAE,GAAG;AACtB,aAAO,IAAI,EAAE;AACb,aAAO;AAAA,IACR;AACD,aAAS,OAAO,MAAM;AACtB,eAAW,KAAK;AAEhB,WAAO,OAAO,QAAQ,KAAK;AAAA,EAC5B;AAED,SAAO;AAAA,IACL,YAAY,WAAW;AACrB,UAAI,IAAI,WAAW,SAAS,QAAQ,OAAM;AAAE,eAAO,WAAW,QAAQ,KAAK;AAAA,MAAE,IAAK;AAClF,aAAO;AAAA,QACL,UAAU,CAAE;AAAA,QACZ;AAAA,MACR;AAAA,IACK;AAAA,IACD,WAAW,SAAS,GAAG;AACrB,aAAO;AAAA,QACL,UAAU,EAAE,SAAS,MAAO;AAAA,QAC5B,GAAG,EAAE;AAAA,MACb;AAAA,IACK;AAAA,IACD,OAAO,SAAS,QAAQ,OAAO;AAC7B,aAAO,MAAM,EAAE,QAAQ,KAAK;AAAA,IAC7B;AAAA,IACD,WAAW,SAAS,OAAO;AACzB,YAAM,IAAI;AACV,YAAM,SAAS,SAAS;AAAA,IACzB;AAAA,IACD,cAAc;AAAA,MACZ,eAAe,EAAC,MAAM,IAAG;AAAA,IAC1B;AAAA,EACL;AACA;AAEY,MAAC,OAAO,OAAO,KAAK;AACpB,MAAC,WAAW,OAAO,IAAI;"}