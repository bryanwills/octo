{"version":3,"mappings":";;;;;AAcA,MAAK,YAAU;AAAA,EACb,YAAY;AAAA,IACV;AAAA,EACD;AAAA,EACD,UAAU;AAAA,IACR,QAAQ;AACN,aAAO,KAAK,OAAO,QAAQ;AAAA,IAC5B;AAAA,EACF;AAAA,EACD,SAAS;AAAA,IACP,MAAM,gBAAgB;AACpB,UAAI;AACF,cAAM,UAAU,MAAI,oBAAE,OAAO,yBAAwB,qBAAE;AACvD,cAAM,QAAQ,OAAO,KAAK,MAAM,KAAK,OAAS,IAAE,OAAO,MAAM;AAE7D,eAAO;AAAA;AAAA,IAAeA,MAAQ,EAAC,OAAO,qBAAqB;AAAA;AAAA,IAAU,MAAM;AAAA,IAAW,MAAM,UAAU;AAAA;AAAA;AAAA,MACtG,SAAO,OAAP;AACA,gBAAQ,KAAK,EAAE,OAAO;AAEtB,eAAO;AAAA;AAAA,IAAeA,MAAM,EAAG,OAAO,qBAAqB;AAAA;AAAA;AAAA,MAC7D;AAAA,IACD;AAAA,IACD,MAAM,aAAa;AACjB,UAAI,SAASA,MAAM,EAAG,QAAQ,KAAK,EAAE,IAAI,GAAG,OAAO;AAEnD,UAAIA,MAAO,IAAI,QAAQ;AACrB,iBAAS,OAAO,SAAS,GAAG,KAAK;AAAA,MACnC;AAEA,UAAI,CAAC,KAAK,SAAS,KAAK,MAAM,YAAY,QAAQ;AAChD,cAAM,WAAW,MAAM,KAAK,cAAc;AAC1C,cAAM,MAAM,IAAI,IAAI,EAAE,MAAM,UAAU,OAAO,MAAM;AAEnD,aAAK,OAAO,OAAO,cAAc,GAAG;AAAA,MACtC;AAAA,IACD;AAAA,EACF;AAAA,EACD,cAAc;AACZ,QAAI,KAAK,OAAO,MAAM,UAAU,QAAQ;AACtC,WAAK,WAAW;AAAA,WACX;AACL,WAAK,OAAO,UAAU,CAAC,EAAE,KAAK,GAAG,WAAW;AAC1C,YAAI,SAAS,kBAAkB;AAC7B,eAAK,WAAW;AAAA,QAClB;AAAA,OACD;AAAA,IACH;AAAA,EACD;AACH;;;SA7DgB,SAAK,sBAAnBC,YAA4D;AAAA;IAAtC,OAAO,SAAK,MAAC;AAAA,IAAI,cAAa;AAAA","names":["moment","_createBlock"],"sources":["../../pages/notepad.vue"],"sourcesContent":["<template>\n  <Editor v-if=\"daily\" :docId=\"daily.id\" initialFocus=\"end\" />\n</template>\n\n<script>\nimport moment from 'moment'\nimport Editor from '/pages/docs/[doc].vue'\nimport Doc from '/src/models/doc.js'\n\nimport {\n  ADD_DOCUMENT,\n  DOCUMENTS_LOADED,\n} from '/src/store/actions.js'\n\nexport default {\n  components: {\n    Editor,\n  },\n  computed: {\n    daily() {\n      return this.$store.getters.daily\n    },\n  },\n  methods: {\n    async buildTemplate() {\n      try {\n        const quotes = (await import('/src/data/quotes.json')).default\n        const quote = quotes[Math.floor(Math.random() * quotes.length)]\n\n        return `#daily\\n\\n# ${moment().format('dddd, MMMM Do, YYYY')}\\n\\n> ${quote.text}\\n> ${quote.author || 'Unknown'}\\n\\n`\n      } catch (error) {\n        console.warn({ error })\n\n        return `#daily\\n\\n# ${moment().format('dddd, MMMM Do, YYYY')}\\n\\n`\n      }\n    },\n    async checkDaily() {\n      let cutoff = moment().startOf('day').add(3, 'hours')\n\n      if (moment() < cutoff) {\n        cutoff = cutoff.subtract(1, 'day')\n      }\n\n      if (!this.daily || this.daily.createdAt < cutoff) {\n        const template = await this.buildTemplate()\n        const doc = new Doc({ text: template, daily: true })\n\n        this.$store.commit(ADD_DOCUMENT, doc)\n      }\n    },\n  },\n  beforeMount() {\n    if (this.$store.state.documents.loaded) {\n      this.checkDaily()\n    } else {\n      this.$store.subscribe(({ type }, _state) => {\n        if (type === DOCUMENTS_LOADED) {\n          this.checkDaily()\n        }\n      })\n    }\n  },\n}\n</script>\n"],"file":"assets/notepad.f93b65ee.js"}