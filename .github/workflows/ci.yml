name: ci
on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  BASE_URL: http://127.0.0.1:8888
  FIREBASE_PROJECT_ID: demo-octo
  NODE_OPTIONS: --max-old-space-size=4096
  NUXT_PUBLIC_CDN_URL:
  NUXT_PUBLIC_DISCORD_INVITE_LINK:
  NUXT_PUBLIC_FATHOM_EVENT_ACCOUNT_REGISTRATION:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_CONTINUE_WITH_PRO:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_MODAL_UPGRADE:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_OPEN_APP:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_SAVE_DOCS:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_SETTINGS_UPGRADE:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_SIGN_UP_NOW:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_TRY_IT_OUT:
  NUXT_PUBLIC_FATHOM_EVENT_CTA_UPGRADE_TO_PRO:
  NUXT_PUBLIC_FATHOM_SITE_ID:
  NUXT_PUBLIC_FATHOM_SITE_URL:
  NUXT_PUBLIC_FIREBASE_API_KEY: fake
  NUXT_PUBLIC_FIREBASE_APP_ID: fake
  NUXT_PUBLIC_FIREBASE_AUTH_DOMAIN: fake
  NUXT_PUBLIC_FIREBASE_DATABASE_URL: fake
  NUXT_PUBLIC_FIREBASE_DISABLED:
  NUXT_PUBLIC_FIREBASE_EMULATOR_AUTH: http://127.0.0.1:8888
  NUXT_PUBLIC_FIREBASE_EMULATOR_BYPASS:
  NUXT_PUBLIC_FIREBASE_EMULATOR_FIRESTORE_HOST: 127.0.0.1
  NUXT_PUBLIC_FIREBASE_EMULATOR_FIRESTORE_PORT: 32776
  NUXT_PUBLIC_FIREBASE_EMULATOR_FUNCTIONS_HOST: 127.0.0.1
  NUXT_PUBLIC_FIREBASE_EMULATOR_FUNCTIONS_PORT: 32779
  NUXT_PUBLIC_FIREBASE_EMULATOR_STORAGE_HOST: 127.0.0.1
  NUXT_PUBLIC_FIREBASE_EMULATOR_STORAGE_PORT: 32778
  NUXT_PUBLIC_FIREBASE_LOG_LEVEL: debug
  NUXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: fake
  NUXT_PUBLIC_FIREBASE_PROJECT_ID: demo-octo
  NUXT_PUBLIC_FIREBASE_STORAGE_BUCKET: fake
  NUXT_PUBLIC_LINK_FEEDBACK:
  NUXT_PUBLIC_STRIPE_MONTHLY_PRICE:
jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          key: v1-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ${{ env.STORE_PATH }}
          restore-keys: v1-${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --shamefully-hoist
  lint:
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          key: v1-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ${{ env.STORE_PATH }}
          restore-keys: v1-${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --shamefully-hoist
      - name: Run linter
        run: pnpm lint
  test-e2e-playwright:
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          key: v1-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ${{ env.STORE_PATH }}
          restore-keys: v1-${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --shamefully-hoist
      - run: pnpm playwright install --with-deps
      - run: pnpm playwright test ./test/e2e
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  test-unit:
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          key: v1-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ${{ env.STORE_PATH }}
          restore-keys: v1-${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --shamefully-hoist
      - run: pnpm nuxi prepare
      - run: pnpm test:unit
  typecheck:
    needs:
      - install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          key: v1-${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          path: |
            ${{ env.STORE_PATH }}
          restore-keys: v1-${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --shamefully-hoist
      - run: pnpm nuxi prepare
      - run: pnpm typecheck
